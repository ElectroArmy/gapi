commands:
  cli:
    init:
      - git submodule sync --recursive
      - git submodule update --init --
      - for d in ./*/ ; do (cd "$d" && git archive --remote=ssh://git@gitlab.youvolio.com:522/kristiyan.tachev/version-tag-hook.git HEAD hooks | tar -x -C .git); done

  version:
    change:
      - node ./build-versions.js && for d in ./*/ ; do (cd "$d" && git add . && git commit --amend --no-edit || true && npm version patch && git push -f && npm publish --update-readme --access public); done && gapi repo commit-patch
    patch:
      - npm version patch
      - git push
      - for d in ./*/ ; do (cd "$d" && npm version patch && npm publish --update-readme --access public); done && gapi repo commit && gapi version change
  repo:
    commit-patch:
      - git add .
      - git commit --amend --no-edit
      - npm version patch
      - git push -f
    commit:
      - git add .
      - git commit --amend --no-edit
      - git push -f
  npm:
    pushtags:
      - for d in ./*/ ; do (cd "$d" && npm run postpublish); done
  
  commit:
    all: for d in ./*/ ; do (cd "$d" && git add . && git commit -m 'autocommitmessage' || true && dir && git push && npm run postpublish); done
    all-publish: for d in ./*/ ; do (cd "$d" && git add . && git commit -m 'autocommitmessage' && git push && npm publish --update-readme --access public); done

    # all-publish: for d in ./*/ ; do (cd "$d" && git add . && git commit -m autocommitmessage && git push && npm publish --update-readme --access public); done

    #  >/dev/null 2>&

  